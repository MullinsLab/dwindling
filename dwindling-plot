#!/usr/bin/env Rscript
# vim: set ft=r ts=2 sw=2:
#
# Plot CSV from dwindling-reads as an SVG
#
# usage: dwindling-plot input.csv output.svg
#        dwindling-plot input.csv > output.svg
#        dwindling-plot < input.csv > output.svg
#
library(ggplot2)

args = commandArgs( trailingOnly = T )
input  = if (!is.na(args[1])) args[1] else "stdin"
output = if (!is.na(args[2])) args[2] else "/dev/stdout"

message("reading from ", input)
message("writing to ", output)

svg(output, width = 9, height = 8)
dw = read.csv(input)

# Use mapped count if available, otherwise raw count
dw$raw_or_mapped_count = NA
dw[ is.na(dw$mapped_count),]$raw_or_mapped_count = dw[ is.na(dw$mapped_count),]$count
dw[!is.na(dw$mapped_count),]$raw_or_mapped_count = dw[!is.na(dw$mapped_count),]$mapped_count

# Plot helpers
breaks = unique(dw$stage_num)
stages = as.character(unique(dw$stage))
fills  = c("lightgreen", "lightblue")
colors = adjustcolor(c("darkgreen", "darkblue"), alpha.f = 0.6)

ggplot(dw, aes(x = stage_num)) +
  geom_ribbon(data = dw[dw$type == "fwd",], aes(ymax =  raw_or_mapped_count, ymin = 0, fill = type)) +
  geom_ribbon(data = dw[dw$type == "rev",], aes(ymin = -raw_or_mapped_count, ymax = 0, fill = type)) +
  scale_y_continuous("Read count, reverse (-) / forward (+)") +
  scale_x_reverse("Stage", labels = stages, breaks = breaks) +
  coord_flip() +
  scale_fill_manual(
    values = fills,
    labels = c("Forward", "Reverse")) +
  scale_color_manual(
    values = colors,
    labels = c("Forward", "Reverse")) +
  guides(
    fill  = guide_legend("Total"),
    color = guide_legend("Mapped", override.aes = list(fill = NA))) +
  ggtitle("Flow of reads through stages of pipeline")
